From: <Saved by Blink>
Snapshot-Content-Location: file:///D:/Pycharm/git/Techlistic.com_POM/report/report1.html?sort=result
Subject: report1.html
Date: Wed, 29 Oct 2025 22:18:14 +0530
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--w7T6f5IrbFicIolJgJBpSj8kASJIHKEFSGmN9kSVvx----"


------MultipartBoundary--w7T6f5IrbFicIolJgJBpSj8kASJIHKEFSGmN9kSVvx----
Content-Type: text/html
Content-ID: <frame-48022A0813F4A5CEA1A50B7A533C097A@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///D:/Pycharm/git/Techlistic.com_POM/report/report1.html?sort=result

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8">
   =20
    <title id=3D"head-title">report1.html</title>
      <link href=3D"file:///D:/Pycharm/git/Techlistic.com_POM/report/assets=
/style.css" rel=3D"stylesheet" type=3D"text/css">
  </head>
  <body>
    <h1 id=3D"title">report1.html</h1>
    <p>Report generated on 25-Jul-2025 at 13:29:14 by <a href=3D"https://py=
pi.python.org/pypi/pytest-html">pytest-html</a>
        v4.1.1</p>
    <div id=3D"environment-header">
      <h2>Environment</h2>
    </div>
    <table id=3D"environment">
      <tr>
        <td>Python</td>
        <td><div>3.13.3</div></td>
      </tr>
   =20
      <tr>
        <td>Platform</td>
        <td><div>Windows-11-10.0.26100-SP0</div></td>
      </tr>
   =20
      <tr>
        <td>Packages</td>
        <td><ul><li>pytest: 8.4.1</li><li>pluggy: 1.6.0</li><ul></ul></ul><=
/td>
      </tr>
   =20
      <tr>
        <td>Plugins</td>
        <td><ul><li>allure-pytest: 2.14.3</li><li>html: 4.1.1</li><li>metad=
ata: 3.1.1</li><li>xdist: 3.8.0</li><ul></ul></ul></td>
      </tr>
    </table>
    <!-- TEMPLATES -->
      <template id=3D"template_environment_row">
      <tr>
        <td></td>
        <td></td>
      </tr>
    </template>
    <template id=3D"template_results-table__body--empty">
      <tbody class=3D"results-table-row">
        <tr id=3D"not-found-message">
          <td colspan=3D"4">No results found. Check the filters.
        </td></tr>
    </tbody></template>
    <template id=3D"template_results-table__tbody">
      <tbody class=3D"results-table-row">
        <tr class=3D"collapsible">
        </tr>
        <tr class=3D"extras-row">
          <td class=3D"extra" colspan=3D"4">
            <div class=3D"extraHTML"></div>
            <div class=3D"media">
              <div class=3D"media-container">
                  <div class=3D"media-container__nav--left">&lt;</div>
                  <div class=3D"media-container__viewport">
                    <img src=3D"">
                    <video controls=3D"">
                      <source src=3D"" type=3D"video/mp4">
                    </video>
                  </div>
                  <div class=3D"media-container__nav--right">&gt;</div>
                </div>
                <div class=3D"media__name"></div>
                <div class=3D"media__counter"></div>
            </div>
            <div class=3D"logwrapper">
              <div class=3D"logexpander"></div>
              <div class=3D"log"></div>
            </div>
          </td>
        </tr>
      </tbody>
    </template>
    <!-- END TEMPLATES -->
    <div class=3D"summary">
      <div class=3D"summary__data">
        <h2>Summary</h2>
        <div class=3D"additional-summary prefix">
        </div>
        <p class=3D"run-count">1 test took 00:00:35.</p>
        <p class=3D"filter">(Un)check the boxes to filter the results.</p>
        <div class=3D"summary__reload">
          <div class=3D"summary__reload__button hidden">
            <div>There are still tests running. <br>Reload this page to get=
 the latest results!</div>
          </div>
        </div>
        <div class=3D"summary__spacer"></div>
        <div class=3D"controls">
          <div class=3D"filters">
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"failed">
            <span class=3D"failed">1 Failed,</span>
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"passed" disabled=3D"">
            <span class=3D"passed">0 Passed,</span>
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"skipped" disabled=3D"">
            <span class=3D"skipped">0 Skipped,</span>
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"xfailed" disabled=3D"">
            <span class=3D"xfailed">0 Expected failures,</span>
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"xpassed" disabled=3D"">
            <span class=3D"xpassed">0 Unexpected passes,</span>
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"error" disabled=3D"">
            <span class=3D"error">0 Errors,</span>
            <input checked=3D"true" class=3D"filter" name=3D"filter_checkbo=
x" type=3D"checkbox" data-test-result=3D"rerun" disabled=3D"">
            <span class=3D"rerun">0 Reruns</span>
          </div>
          <div class=3D"collapse">
            <button id=3D"show_all_details">Show all details</button>&nbsp;=
/&nbsp;<button id=3D"hide_all_details">Hide all details</button>
          </div>
        </div>
      </div>
      <div class=3D"additional-summary summary">
      </div>
      <div class=3D"additional-summary postfix">
      </div>
    </div>
    <table id=3D"results-table"><thead id=3D"results-table-head">
        <tr>
          <th class=3D"sortable asc" data-column-type=3D"result">Result</th=
>
          <th class=3D"sortable" data-column-type=3D"testId">Test</th>
          <th class=3D"sortable" data-column-type=3D"duration">Duration</th=
>
          <th>Links</th>
        </tr>
      </thead>
      <tbody class=3D"results-table-row failed" id=3D"tset_cases/automation=
.py::test_login">
        <tr class=3D"collapsible" data-id=3D"test_0">
        <td class=3D"col-result">Failed</td><td class=3D"col-testId">tset_c=
ases/automation.py::test_login</td><td class=3D"col-duration">00:00:35</td>=
<td class=3D"col-links"></td></tr>
        <tr class=3D"extras-row">
          <td class=3D"extra" colspan=3D"4">
            <div class=3D"extraHTML"></div>
            <div class=3D"media hidden">
              <div class=3D"media-container">
                  <div class=3D"media-container__nav--left">&lt;</div>
                  <div class=3D"media-container__viewport">
                    <img src=3D"file:///D:/Pycharm/git/Techlistic.com_POM/r=
eport/report1.html?sort=3Dresult">
                    <video controls=3D"">
                      <source src=3D"file:///D:/Pycharm/git/Techlistic.com_=
POM/report/report1.html?sort=3Dresult" type=3D"video/mp4">
                    </video>
                  </div>
                  <div class=3D"media-container__nav--right">&gt;</div>
                </div>
                <div class=3D"media__name"></div>
                <div class=3D"media__counter"></div>
            </div>
            <div class=3D"logwrapper">
              <div class=3D"logexpander"></div>
              <div class=3D"log">driver =3D &lt;selenium.webdriver.chrome.w=
ebdriver.WebDriver (session=3D"df24d9ed823c53155e69ecd3cd26dd3a")&gt;

    def test_login(driver):
        login_form =3D Login_Form(driver)
        login_form.open_page("https://www.techlistic.com/p/selenium-practic=
e-form.html")
   =20
        login_form.enter_firstname("Usha")
        time.sleep(1)
        login_form.enter_lastname("Nazare")
        time.sleep(1)
&gt;       login_form.enter_sex()

tset_cases\automation.py:22:=20
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _=
 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ =
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _
base_pages\login_form.py:30: in enter_sex
    self.driver.find_element(*self.sex).click()
D:\Python\Lib\site-packages\selenium\webdriver\remote\webelement.py:121: in=
 click
    self._execute(Command.CLICK_ELEMENT)
D:\Python\Lib\site-packages\selenium\webdriver\remote\webelement.py:574: in=
 _execute
    return self._parent.execute(command, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
D:\Python\Lib\site-packages\selenium\webdriver\remote\webdriver.py:447: in =
execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _=
 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ =
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self =3D &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at =
0x0000024EE7B474D0&gt;
response =3D {'status': 400, 'value': '{"value":{"error":"element click int=
ercepted","message":"element click intercepted: Element ...ff62b74e298+1061=
6]\\n\\tBaseThreadInitThunk [0x0x7ffe5d5ae8d7+23]\\n\\tRtlUserThreadStart [=
0x0x7ffe5ea5c34c+44]\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -&gt; None:
        """Checks that a JSON response from the WebDriver does not have an
        error.
   =20
        :Args:
         - response - The JSON response from the WebDriver server as a dict=
ionary
           object.
   =20
        :Raises: If the response contains an error message.
        """
        status =3D response.get("status", None)
        if not status or status =3D=3D ErrorCode.SUCCESS:
            return
        value =3D None
        message =3D response.get("message", "")
        screen: str =3D response.get("screen", "")
        stacktrace =3D None
        if isinstance(status, int):
            value_json =3D response.get("value", None)
            if value_json and isinstance(value_json, str):
                import json
   =20
                try:
                    value =3D json.loads(value_json)
                    if len(value) =3D=3D 1:
                        value =3D value["value"]
                    status =3D value.get("error", None)
                    if not status:
                        status =3D value.get("status", ErrorCode.UNKNOWN_ER=
ROR)
                        message =3D value.get("value") or value.get("messag=
e")
                        if not isinstance(message, str):
                            value =3D message
                            message =3D message.get("message")
                    else:
                        message =3D value.get("message", None)
                except ValueError:
                    pass
   =20
        exception_class: Type[WebDriverException]
        e =3D ErrorCode()
        error_codes =3D [item for item in dir(e) if not item.startswith("__=
")]
        for error_code in error_codes:
            error_info =3D getattr(ErrorCode, error_code)
            if isinstance(error_info, list) and status in error_info:
                exception_class =3D getattr(ExceptionMapping, error_code, W=
ebDriverException)
                break
        else:
            exception_class =3D WebDriverException
   =20
        if not value:
            value =3D response["value"]
        if isinstance(value, str):
            raise exception_class(value)
        if message =3D=3D "" and "message" in value:
            message =3D value["message"]
   =20
        screen =3D None  # type: ignore[assignment]
        if "screen" in value:
            screen =3D value["screen"]
   =20
        stacktrace =3D None
        st_value =3D value.get("stackTrace") or value.get("stacktrace")
        if st_value:
            if isinstance(st_value, str):
                stacktrace =3D st_value.split("\n")
            else:
                stacktrace =3D []
                try:
                    for frame in st_value:
                        line =3D frame.get("lineNumber", "")
                        file =3D frame.get("fileName", "&lt;anonymous&gt;")
                        if line:
                            file =3D f"{file}:{line}"
                        meth =3D frame.get("methodName", "&lt;anonymous&gt;=
")
                        if "className" in frame:
                            meth =3D f"{frame['className']}.{meth}"
                        msg =3D "    at %s (%s)"
                        msg =3D msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class =3D=3D UnexpectedAlertPresentException:
            alert_text =3D None
            if "data" in value:
                alert_text =3D value["data"].get("text")
            elif "alert" in value:
                alert_text =3D value["alert"].get("text")
            raise exception_class(message, screen, stacktrace, alert_text) =
 # type: ignore[call-arg]  # mypy is not smart enough here
&gt;       raise exception_class(message, screen, stacktrace)
<span class=3D"error">E       selenium.common.exceptions.ElementClickInterc=
eptedException: Message: element click intercepted: Element &lt;input id=3D=
"sex-1" name=3D"sex" style=3D"font-size:14px;margin-left:0;margin-right:0;m=
argin-top:0;padding:0;vertical-align:baseline" type=3D"radio" value=3D"Fema=
le"&gt; is not clickable at point (265, 629). Other element would receive t=
he click: &lt;iframe id=3D"google_ads_iframe_/23202726502,22662382379/techl=
istic_com-medrectangle-2_0" name=3D"google_ads_iframe_/23202726502,22662382=
379/techlistic_com-medrectangle-2_0" title=3D"3rd party ad content" width=
=3D"1005" height=3D"124" scrolling=3D"no" marginwidth=3D"0" marginheight=3D=
"0" frameborder=3D"0" aria-label=3D"Advertisement" tabindex=3D"0" allow=3D"=
private-state-token-redemption;attribution-reporting" data-load-complete=3D=
"true" data-google-container-id=3D"2" style=3D"border: 0px; vertical-align:=
 bottom; max-height: 30vh !important; overflow: hidden !important; display:=
 block !important; margin: 0px auto !important;"&gt;&lt;/iframe&gt;</span>
<span class=3D"error">E         (Session info: chrome=3D138.0.7204.159)</sp=
an>
<span class=3D"error">E       Stacktrace:</span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b75e935+77845]</=
span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b75e990+77936]</=
span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b519cda]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b5786a9]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b576042]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b573081]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b571f81]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b5636c8]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b5988ca]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b562f76]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b598ae0]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b5c0b07]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b5986a3]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b561791]</span>
<span class=3D"error">E       	(No symbol) [0x0x7ff62b562523]</span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62ba3684d+3059501]=
</span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62ba30c0d+3035885]=
</span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62ba50400+3164896]=
</span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b778c3e+185118]<=
/span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b78054f+216111]<=
/span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b7672e4+113092]<=
/span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b767499+113529]<=
/span>
<span class=3D"error">E       	GetHandleVerifier [0x0x7ff62b74e298+10616]</=
span>
<span class=3D"error">E       	BaseThreadInitThunk [0x0x7ffe5d5ae8d7+23]</s=
pan>
<span class=3D"error">E       	RtlUserThreadStart [0x0x7ffe5ea5c34c+44]</sp=
an>

D:\Python\Lib\site-packages\selenium\webdriver\remote\errorhandler.py:232: =
ElementClickInterceptedException
</div>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
 =20
  <footer>
    <div id=3D"data-container" data-jsonblob=3D"{&quot;environment&quot;: {=
&quot;Python&quot;: &quot;3.13.3&quot;, &quot;Platform&quot;: &quot;Windows=
-11-10.0.26100-SP0&quot;, &quot;Packages&quot;: {&quot;pytest&quot;: &quot;=
8.4.1&quot;, &quot;pluggy&quot;: &quot;1.6.0&quot;}, &quot;Plugins&quot;: {=
&quot;allure-pytest&quot;: &quot;2.14.3&quot;, &quot;html&quot;: &quot;4.1.=
1&quot;, &quot;metadata&quot;: &quot;3.1.1&quot;, &quot;xdist&quot;: &quot;=
3.8.0&quot;}}, &quot;tests&quot;: {&quot;tset_cases/automation.py::test_log=
in&quot;: [{&quot;extras&quot;: [], &quot;result&quot;: &quot;Failed&quot;,=
 &quot;testId&quot;: &quot;tset_cases/automation.py::test_login&quot;, &quo=
t;duration&quot;: &quot;00:00:35&quot;, &quot;resultsTableRow&quot;: [&quot=
;&lt;td class=3D\&quot;col-result\&quot;&gt;Failed&lt;/td&gt;&quot;, &quot;=
&lt;td class=3D\&quot;col-testId\&quot;&gt;tset_cases/automation.py::test_l=
ogin&lt;/td&gt;&quot;, &quot;&lt;td class=3D\&quot;col-duration\&quot;&gt;0=
0:00:35&lt;/td&gt;&quot;, &quot;&lt;td class=3D\&quot;col-links\&quot;&gt;&=
lt;/td&gt;&quot;], &quot;log&quot;: &quot;driver =3D &amp;lt;selenium.webdr=
iver.chrome.webdriver.WebDriver (session=3D&amp;quot;df24d9ed823c53155e69ec=
d3cd26dd3a&amp;quot;)&amp;gt;\n\n    def test_login(driver):\n        login=
_form =3D Login_Form(driver)\n        login_form.open_page(&amp;quot;https:=
//www.techlistic.com/p/selenium-practice-form.html&amp;quot;)\n    \n      =
  login_form.enter_firstname(&amp;quot;Usha&amp;quot;)\n        time.sleep(=
1)\n        login_form.enter_lastname(&amp;quot;Nazare&amp;quot;)\n        =
time.sleep(1)\n&amp;gt;       login_form.enter_sex()\n\ntset_cases\\automat=
ion.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ =
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _=
 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase_pages\\login_form.py:30: i=
n enter_sex\n    self.driver.find_element(*self.sex).click()\nD:\\Python\\L=
ib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:121: in click=
\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Python\\Lib\\site-packages\=
\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return se=
lf._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^=
^^^^^^^^^^\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\we=
bdriver.py:447: in execute\n    self.error_handler.check_response(response)=
\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _=
 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ =
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself =3D &amp;lt;selenium.webdriver.remo=
te.errorhandler.ErrorHandler object at 0x0000024EE7B474D0&amp;gt;\nresponse=
 =3D {&amp;#x27;status&amp;#x27;: 400, &amp;#x27;value&amp;#x27;: &amp;#x27=
;{&amp;quot;value&amp;quot;:{&amp;quot;error&amp;quot;:&amp;quot;element cl=
ick intercepted&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;element cli=
ck intercepted: Element ...ff62b74e298+10616]\\\\n\\\\tBaseThreadInitThunk =
[0x0x7ffe5d5ae8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe5ea5c34c+44]\\\\=
n&amp;quot;}}&amp;#x27;}\n\n    def check_response(self, response: Dict[str=
, Any]) -&amp;gt; None:\n        &amp;quot;&amp;quot;&amp;quot;Checks that =
a JSON response from the WebDriver does not have an\n        error.\n    \n=
        :Args:\n         - response - The JSON response from the WebDriver =
server as a dictionary\n           object.\n    \n        :Raises: If the r=
esponse contains an error message.\n        &amp;quot;&amp;quot;&amp;quot;\=
n        status =3D response.get(&amp;quot;status&amp;quot;, None)\n       =
 if not status or status =3D=3D ErrorCode.SUCCESS:\n            return\n   =
     value =3D None\n        message =3D response.get(&amp;quot;message&amp=
;quot;, &amp;quot;&amp;quot;)\n        screen: str =3D response.get(&amp;qu=
ot;screen&amp;quot;, &amp;quot;&amp;quot;)\n        stacktrace =3D None\n  =
      if isinstance(status, int):\n            value_json =3D response.get(=
&amp;quot;value&amp;quot;, None)\n            if value_json and isinstance(=
value_json, str):\n                import json\n    \n                try:\=
n                    value =3D json.loads(value_json)\n                    =
if len(value) =3D=3D 1:\n                        value =3D value[&amp;quot;=
value&amp;quot;]\n                    status =3D value.get(&amp;quot;error&=
amp;quot;, None)\n                    if not status:\n                     =
   status =3D value.get(&amp;quot;status&amp;quot;, ErrorCode.UNKNOWN_ERROR=
)\n                        message =3D value.get(&amp;quot;value&amp;quot;)=
 or value.get(&amp;quot;message&amp;quot;)\n                        if not =
isinstance(message, str):\n                            value =3D message\n =
                           message =3D message.get(&amp;quot;message&amp;qu=
ot;)\n                    else:\n                        message =3D value.=
get(&amp;quot;message&amp;quot;, None)\n                except ValueError:\=
n                    pass\n    \n        exception_class: Type[WebDriverExc=
eption]\n        e =3D ErrorCode()\n        error_codes =3D [item for item =
in dir(e) if not item.startswith(&amp;quot;__&amp;quot;)]\n        for erro=
r_code in error_codes:\n            error_info =3D getattr(ErrorCode, error=
_code)\n            if isinstance(error_info, list) and status in error_inf=
o:\n                exception_class =3D getattr(ExceptionMapping, error_cod=
e, WebDriverException)\n                break\n        else:\n            e=
xception_class =3D WebDriverException\n    \n        if not value:\n       =
     value =3D response[&amp;quot;value&amp;quot;]\n        if isinstance(v=
alue, str):\n            raise exception_class(value)\n        if message =
=3D=3D &amp;quot;&amp;quot; and &amp;quot;message&amp;quot; in value:\n    =
        message =3D value[&amp;quot;message&amp;quot;]\n    \n        scree=
n =3D None  # type: ignore[assignment]\n        if &amp;quot;screen&amp;quo=
t; in value:\n            screen =3D value[&amp;quot;screen&amp;quot;]\n   =
 \n        stacktrace =3D None\n        st_value =3D value.get(&amp;quot;st=
ackTrace&amp;quot;) or value.get(&amp;quot;stacktrace&amp;quot;)\n        i=
f st_value:\n            if isinstance(st_value, str):\n                sta=
cktrace =3D st_value.split(&amp;quot;\\n&amp;quot;)\n            else:\n   =
             stacktrace =3D []\n                try:\n                    f=
or frame in st_value:\n                        line =3D frame.get(&amp;quot=
;lineNumber&amp;quot;, &amp;quot;&amp;quot;)\n                        file =
=3D frame.get(&amp;quot;fileName&amp;quot;, &amp;quot;&amp;lt;anonymous&amp=
;gt;&amp;quot;)\n                        if line:\n                        =
    file =3D f&amp;quot;{file}:{line}&amp;quot;\n                        me=
th =3D frame.get(&amp;quot;methodName&amp;quot;, &amp;quot;&amp;lt;anonymou=
s&amp;gt;&amp;quot;)\n                        if &amp;quot;className&amp;qu=
ot; in frame:\n                            meth =3D f&amp;quot;{frame[&amp;=
#x27;className&amp;#x27;]}.{meth}&amp;quot;\n                        msg =
=3D &amp;quot;    at %s (%s)&amp;quot;\n                        msg =3D msg=
 % (meth, file)\n                        stacktrace.append(msg)\n          =
      except TypeError:\n                    pass\n        if exception_cla=
ss =3D=3D UnexpectedAlertPresentException:\n            alert_text =3D None=
\n            if &amp;quot;data&amp;quot; in value:\n                alert_=
text =3D value[&amp;quot;data&amp;quot;].get(&amp;quot;text&amp;quot;)\n   =
         elif &amp;quot;alert&amp;quot; in value:\n                alert_te=
xt =3D value[&amp;quot;alert&amp;quot;].get(&amp;quot;text&amp;quot;)\n    =
        raise exception_class(message, screen, stacktrace, alert_text)  # t=
ype: ignore[call-arg]  # mypy is not smart enough here\n&amp;gt;       rais=
e exception_class(message, screen, stacktrace)\nE       selenium.common.exc=
eptions.ElementClickInterceptedException: Message: element click intercepte=
d: Element &amp;lt;input id=3D&amp;quot;sex-1&amp;quot; name=3D&amp;quot;se=
x&amp;quot; style=3D&amp;quot;font-size:14px;margin-left:0;margin-right:0;m=
argin-top:0;padding:0;vertical-align:baseline&amp;quot; type=3D&amp;quot;ra=
dio&amp;quot; value=3D&amp;quot;Female&amp;quot;&amp;gt; is not clickable a=
t point (265, 629). Other element would receive the click: &amp;lt;iframe i=
d=3D&amp;quot;google_ads_iframe_/23202726502,22662382379/techlistic_com-med=
rectangle-2_0&amp;quot; name=3D&amp;quot;google_ads_iframe_/23202726502,226=
62382379/techlistic_com-medrectangle-2_0&amp;quot; title=3D&amp;quot;3rd pa=
rty ad content&amp;quot; width=3D&amp;quot;1005&amp;quot; height=3D&amp;quo=
t;124&amp;quot; scrolling=3D&amp;quot;no&amp;quot; marginwidth=3D&amp;quot;=
0&amp;quot; marginheight=3D&amp;quot;0&amp;quot; frameborder=3D&amp;quot;0&=
amp;quot; aria-label=3D&amp;quot;Advertisement&amp;quot; tabindex=3D&amp;qu=
ot;0&amp;quot; allow=3D&amp;quot;private-state-token-redemption;attribution=
-reporting&amp;quot; data-load-complete=3D&amp;quot;true&amp;quot; data-goo=
gle-container-id=3D&amp;quot;2&amp;quot; style=3D&amp;quot;border: 0px; ver=
tical-align: bottom; max-height: 30vh !important; overflow: hidden !importa=
nt; display: block !important; margin: 0px auto !important;&amp;quot;&amp;g=
t;&amp;lt;/iframe&amp;gt;\nE         (Session info: chrome=3D138.0.7204.159=
)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff62b75e935+77845=
]\nE       \tGetHandleVerifier [0x0x7ff62b75e990+77936]\nE       \t(No symb=
ol) [0x0x7ff62b519cda]\nE       \t(No symbol) [0x0x7ff62b5786a9]\nE       \=
t(No symbol) [0x0x7ff62b576042]\nE       \t(No symbol) [0x0x7ff62b573081]\n=
E       \t(No symbol) [0x0x7ff62b571f81]\nE       \t(No symbol) [0x0x7ff62b=
5636c8]\nE       \t(No symbol) [0x0x7ff62b5988ca]\nE       \t(No symbol) [0=
x0x7ff62b562f76]\nE       \t(No symbol) [0x0x7ff62b598ae0]\nE       \t(No s=
ymbol) [0x0x7ff62b5c0b07]\nE       \t(No symbol) [0x0x7ff62b5986a3]\nE     =
  \t(No symbol) [0x0x7ff62b561791]\nE       \t(No symbol) [0x0x7ff62b562523=
]\nE       \tGetHandleVerifier [0x0x7ff62ba3684d+3059501]\nE       \tGetHan=
dleVerifier [0x0x7ff62ba30c0d+3035885]\nE       \tGetHandleVerifier [0x0x7f=
f62ba50400+3164896]\nE       \tGetHandleVerifier [0x0x7ff62b778c3e+185118]\=
nE       \tGetHandleVerifier [0x0x7ff62b78054f+216111]\nE       \tGetHandle=
Verifier [0x0x7ff62b7672e4+113092]\nE       \tGetHandleVerifier [0x0x7ff62b=
767499+113529]\nE       \tGetHandleVerifier [0x0x7ff62b74e298+10616]\nE    =
   \tBaseThreadInitThunk [0x0x7ffe5d5ae8d7+23]\nE       \tRtlUserThreadStar=
t [0x0x7ffe5ea5c34c+44]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdri=
ver\\remote\\errorhandler.py:232: ElementClickInterceptedException\n&quot;}=
]}, &quot;renderCollapsed&quot;: [&quot;passed&quot;], &quot;initialSort&qu=
ot;: &quot;result&quot;, &quot;title&quot;: &quot;report1.html&quot;}"></di=
v>
   =20
  </footer>
</body></html>
------MultipartBoundary--w7T6f5IrbFicIolJgJBpSj8kASJIHKEFSGmN9kSVvx----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///D:/Pycharm/git/Techlistic.com_POM/report/assets/style.css

@charset "utf-8";

body { font-family: Helvetica, Arial, sans-serif; font-size: 12px; min-widt=
h: 800px; color: rgb(153, 153, 153); }

h1 { font-size: 24px; color: black; }

h2 { font-size: 16px; color: black; }

p { color: black; }

a { color: rgb(153, 153, 153); }

table { border-collapse: collapse; }

#environment td { padding: 5px; border: 1px solid rgb(230, 230, 230); verti=
cal-align: top; }

#environment tr:nth-child(2n+1) { background-color: rgb(246, 246, 246); }

#environment ul { margin: 0px; padding: 0px 20px; }

span.passed, .passed .col-result { color: green; }

span.skipped, span.xfailed, span.rerun, .skipped .col-result, .xfailed .col=
-result, .rerun .col-result { color: orange; }

span.error, span.failed, span.xpassed, .error .col-result, .failed .col-res=
ult, .xpassed .col-result { color: red; }

.col-links__extra { margin-right: 3px; }

#results-table { border: 1px solid rgb(230, 230, 230); color: rgb(153, 153,=
 153); font-size: 12px; width: 100%; }

#results-table th, #results-table td { padding: 5px; border: 1px solid rgb(=
230, 230, 230); text-align: left; }

#results-table th { font-weight: bold; }

.logwrapper { max-height: 230px; overflow-y: scroll; background-color: rgb(=
230, 230, 230); }

.logwrapper.expanded { max-height: none; }

.logwrapper.expanded .logexpander::after { content: "collapse [-]"; }

.logwrapper .logexpander { z-index: 1; position: sticky; top: 10px; width: =
max-content; border: 1px solid; border-radius: 3px; padding: 5px 7px; margi=
n: 10px 0px 10px calc(100% - 80px); cursor: pointer; background-color: rgb(=
230, 230, 230); }

.logwrapper .logexpander::after { content: "expand [+]"; }

.logwrapper .logexpander:hover { color: rgb(0, 0, 0); border-color: rgb(0, =
0, 0); }

.logwrapper .log { min-height: 40px; position: relative; top: -50px; height=
: calc(100% + 50px); border: 1px solid rgb(230, 230, 230); color: black; di=
splay: block; font-family: "Courier New", Courier, monospace; padding: 5px =
80px 5px 5px; white-space: pre-wrap; }

div.media { border: 1px solid rgb(230, 230, 230); float: right; height: 240=
px; margin: 0px 5px; overflow: hidden; width: 320px; }

.media-container { display: grid; grid-template-columns: 25px auto 25px; al=
ign-items: center; flex: 1 1 0%; overflow: hidden; height: 200px; }

.media-container--fullscreen { grid-template-columns: 0px auto 0px; }

.media-container__nav--right, .media-container__nav--left { text-align: cen=
ter; cursor: pointer; }

.media-container__viewport { cursor: pointer; text-align: center; height: i=
nherit; }

.media-container__viewport img, .media-container__viewport video { object-f=
it: cover; width: 100%; max-height: 100%; }

.media__name, .media__counter { display: flex; flex-direction: row; justify=
-content: space-around; flex: 0 0 25px; align-items: center; }

.collapsible td:not(.col-links) { cursor: pointer; }

.collapsible td:not(.col-links):hover::after { color: rgb(187, 187, 187); f=
ont-style: italic; cursor: pointer; }

.col-result { width: 130px; }

.col-result:hover::after { content: " (hide details)"; }

.col-result.collapsed:hover::after { content: " (show details)"; }

#environment-header h2:hover::after { content: " (hide details)"; color: rg=
b(187, 187, 187); font-style: italic; cursor: pointer; font-size: 12px; }

#environment-header.collapsed h2:hover::after { content: " (show details)";=
 color: rgb(187, 187, 187); font-style: italic; cursor: pointer; font-size:=
 12px; }

.sortable { cursor: pointer; }

.sortable.desc::after { content: " "; position: relative; left: 5px; bottom=
: -12.5px; border-width: 10px 10px 0px; border-top-style: solid; border-rig=
ht-style: solid; border-left-style: solid; border-top-color: rgb(76, 175, 8=
0); border-image: initial; border-bottom-style: initial; border-bottom-colo=
r: initial; border-left-color: transparent; border-right-color: transparent=
; }

.sortable.asc::after { content: " "; position: relative; left: 5px; bottom:=
 12.5px; border-width: 0px 10px 10px; border-right-style: solid; border-bot=
tom-style: solid; border-left-style: solid; border-bottom-color: rgb(76, 17=
5, 80); border-image: initial; border-top-style: initial; border-top-color:=
 initial; border-left-color: transparent; border-right-color: transparent; =
}

.hidden, .summary__reload__button.hidden { display: none; }

.summary__data { flex: 0 0 550px; }

.summary__reload { flex: 1 1 0%; display: flex; justify-content: center; }

.summary__reload__button { flex: 0 0 300px; display: flex; color: white; fo=
nt-weight: bold; background-color: rgb(76, 175, 80); text-align: center; ju=
stify-content: center; align-items: center; border-radius: 3px; cursor: poi=
nter; }

.summary__reload__button:hover { background-color: rgb(70, 160, 73); }

.summary__spacer { flex: 0 0 550px; }

.controls { display: flex; justify-content: space-between; }

.filters, .collapse { display: flex; align-items: center; }

.filters button, .collapse button { color: rgb(153, 153, 153); border: none=
; background: none; cursor: pointer; text-decoration: underline; }

.filters button:hover, .collapse button:hover { color: rgb(204, 204, 204); =
}

.filter__label { margin-right: 10px; }
------MultipartBoundary--w7T6f5IrbFicIolJgJBpSj8kASJIHKEFSGmN9kSVvx------
